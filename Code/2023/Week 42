#load libraries 
library(tidyverse)
library(showtext)
library(ggtext)
library(tidytuesdayR)
library(glue)
library(Cairo)
library("ggimage")
library(cowplot)


#1.DATA LOADING
tuesdata <- tidytuesdayR::tt_load(2023, week = 42)
taylor_album_songs <- tuesdata$taylor_album_songs
taylor_all_songs <- tuesdata$taylor_all_songs
taylor_albums <- tuesdata$taylor_albums

#2.DATA WRANGLING
glimpse(taylor_album_songs)
glimpse(taylor_all_songs)
glimpse(taylor_albums)

dt<-taylor_album_songs %>% 
  select(album_name,track_number,track_name,
         danceability,energy,speechiness,acousticness,
         liveness,valence) %>% 
  pivot_longer(cols =danceability:valence,
               names_to = "characteristics",values_to = "values")


dt_plot<-dt %>% 
  group_by(album_name,characteristics) %>% 
  summarise(av=round(mean(values,na.rm = TRUE),2)) %>% 
  ungroup() %>% 
  mutate(album_name=factor(album_name,levels =c("Taylor Swift",
                                                "Fearless (Taylor's Version)",
                                                "Speak Now",
                                                "Red (Taylor's Version)",
                                                "1989",
                                                "reputation",
                                                "Lover",
                                                "folklore",
                                                "evermore",
                                          "Midnights"))) 

#3. PLOT VIZUALIZATION 
## Load Google fonts (https://fonts.google.com/)
font_add_google("Satisfy", family = "title")                           
font_add_google("Dosis", family = "subtitle")  
showtext::showtext_auto()
showtext::showtext_opts(dpi = 300) 

##Title,subtitle & caption 
tt <- str_glue("Decoding Taylor Swift last 10 Albums")
st <- str_glue(stringr::str_wrap("Let's dive into Taylor Swift's 
last 10 albums! We'll analyze the songs using Spotify's 6 features: 
valence, speechiness, liveness, energy, danceability, and acousticness 
(rated from 0 to 1). The graph below presents the average rates per album.",
                                 width=85))
ct  <- str_glue(stringr::str_wrap("Data Source:  taylor R package from W. Jake Thompson | 
                                  Creator:Zoi Diamantakou |tidytuesday | 2023, 
                                  week 42",width=70))
#plot
p<-ggplot(dt_plot, aes(y=characteristics,x=av)) +
  ggimage::geom_image(aes(image = 'note.png'),
                      # Aspect ratio
                      size = 0.3)+
  facet_wrap(~album_name,ncol = 1)+
  scale_x_continuous(breaks = seq(0,1,0.1))+
  labs(title=tt,
       subtitle=st,
       caption = ct,
       x="",
       y="",
       fill="")+

## theme
theme_minimal(base_family = "Reem Kufi")+
  theme(
    plot.margin           = margin(t = 10, r = 15, b = 10, l = 25),
    plot.title.position   = "plot",
    plot.caption.position = "plot",
    legend.position       = 'bottom',
    plot.title            = element_text(
      family= 'title',face= "bold",size= 30,colour="#513163",
      margin= margin(t = 10, b = 5)),
    plot.subtitle = element_text(
      family= 'subtitle',colour="black", 
      lineheight= 0.9,size  = 16,margin= margin(t = 5, b = 10)),
    strip.text.x = element_text(size = 12,colour="#a64477",face="bold"),
    plot.background = element_rect(fill = "white", color = NA),
    axis.text.x=element_text(size=10),
    axis.text.y=element_text(size=8), 
    panel.background = element_blank(),
    panel.grid.major.y = element_line(color = "#ebb4d3",
                                      size = 0.3,linetype = 1),
    panel.grid.major.x = element_line(color = "#ebb4d3",
                                      size = 0.3,linetype = 2),
    panel.grid = element_blank())


ggsave("TT2023Week42.png", width = 8, height = 12, 
       type = "Cairo",dpi = 300, bg = "white")
