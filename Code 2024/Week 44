#Monster Movies
#2024: week 44 


#load key libraries 
library(tidytuesdayR)# Access data for the #TidyTuesday project.
library(dplyr)
library(ggplot2)
library(tidyverse) # Collection of tools for data manipulation and visualization.
library(showtext) #Easily use custom fonts in plots.Allows the use of google fonts
library(glue)#Simple string formatting and interpolation.
library(Cairo) #High-quality graphics rendering for plots.

#additional libraries
library(ggtext) #Allows rich text formatting (Markdown/HTML) in ggplot.
library(forcats) #Tools for handling categorical variables (factors).
library(ggrepel) #Avoids overlapping labels in ggplot2.
library(lubridate)#Simplifies working with dates and times.
library(ggridges) #Create ridge/joy plots for visualizing distributions.
library(ggstream)


## Load Google fonts (https://fonts.google.com/)
font_add_google("Creepster", family = "title")                           
font_add_google("Montserrat", family = "subtitle") 
font_add_google("Lato", family = "x")
showtext::showtext_auto()
showtext::showtext_opts(dpi = 300) 

#1.DATA LOADING
tuesdata <- tidytuesdayR::tt_load(2024, week = 44)
monster_movie_genres <- tuesdata$monster_movie_genres
monster_movies <- tuesdata$monster_movies

#2.DATA WRANGLING
dt<-monster_movies%>%
  mutate(IMDB_group=case_when(
    average_rating< 5~"<5",
    average_rating>=5&average_rating<6~"5-5.9",
    average_rating>=6&average_rating<7~"6-6.9",
    average_rating>=7&average_rating<8~"7-7.9",
    average_rating>=8&average_rating<9~"8-8.9",
    average_rating>=9~"9+")) %>% 
  mutate(IMDB_group=factor(IMDB_group,levels=c(
    "<5","5-5.9","6-6.9","7-7.9","8-8.9","9+"))) %>% 
  select(year,IMDB_group) %>% 
  group_by(year,IMDB_group) %>% 
  summarise(n=n()) %>% 
  mutate(percent=n/sum(n)*100)

#3. PLOT VIZUALIZATION 
##Title,subtitle & caption 
tt <- str_glue(stringr::str_wrap("Monster movies since 1919: did their 
                                 IMDB scores got better?",
                                 width=70))
st <- str_glue(stringr::str_wrap("Percentage distribution of average IMDB ratings for monster movies (1919-Present)",
                                 width=100))
ct  <- str_glue(stringr::str_wrap("Data source:IMDB | 
                                  Creator:Zoi Diamantakou | 
                                  Tidytuesday:2024, week 44",width=100))

##plot
p<-
  ggplot(dt, aes(x=year, y=n, fill=IMDB_group)) +
  geom_stream(type = "proportional")+
  scale_x_continuous(breaks=seq(1919,2024,5),limits=c(1919,2024))+
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
  labs(x = NULL, 
       y = NULL,
       title=tt,
       subtitle = st,
       caption = ct,
       fill="IMDB rating"
  ) +
  scale_fill_manual(values=c("#252620",
                             "#585959",
                             "#BFBFBF",
                             "#d2b2af",
                             "#D9A59A",
                             "#A66660"))+
  theme_minimal(base_family = "Reem Kufi")


p+theme(
  plot.margin           = margin(t = 20, r = 15, b = 10, l = 25),
  plot.background       = element_rect(fill = "white", color = NA),
  plot.caption.position = "plot",
  plot.title            = element_text(
    family= 'title',
    face= "bold",
    size= 28,
    hjust = 0.5,
    colour="black",
    margin= margin(t = 16, b = 5)),
  plot.caption = element_text(colour="black"),
  plot.subtitle = element_text(
    family= 'subtitle', hjust = 0.5,
    lineheight= 0.9,size  = 16,colour="black",
    margin= margin(t = 5, b = 10)),
  axis.text.x = element_text(size=12,angle = 0,colour="black"),
  axis.text.y = element_text(size=12,angle = 0,colour="black"),
  legend.position       = 'bottom',
  panel.background = element_blank(),
  panel.grid.major.y = element_line(color = "black",
                                    size = 0.75,linetype = 2),
  panel.grid.major.x = element_line(color = "black",
                                    size = 0.75,linetype = 2),
  panel.grid = element_blank(),
  legend.text = element_text(color = "black", size = 10),
  legend.title = element_text(size=10,color="black"),
  legend.background = element_rect(color = "white",
                                   size = .3,
                                   fill = "white"),
  legend.box.margin = margin(t = 30),
  legend.key.height = unit(.25, "lines"),
  legend.key.width = unit(2.5, "lines"))



#4. SAVE THE PLOT
ggsave("TT2024Week_44.png", width = 12, height = 8,type = "Cairo",dpi = 300, bg = "white") 
ggsave("TT2024Week_44.svg", width = 12, height = 8,dpi = 300, bg = "white")
browseURL("TT2024Week_X.svg")



